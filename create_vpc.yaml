---
 - hosts: localhost
   gather_facts: no
   module_defaults:
     group/aws:
       region: "us-east-2"
   tasks: 
    - name: create vpc
      ec2_vpc_net:
        name: Module5-vpc
        cidr_block: 10.10.0.0/16
        tags:
          Module: 5
        region: "us-east-2"
        state: present
      register: vpc
    - name: create public subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: m5-public-sn
          Module: 5
        cidr: 10.10.0.0/24
        region: "us-east-2"
        state: present
      register: public_subnet
    - name: Create private subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: m5-private-sn1
          Module: 5
        cidr: 10.10.1.0/24
        region: "us-east-2"
        state: present
      register: private_subnet1
    - name: Create private subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: m5-private-sn2
          Module: 5
        cidr: 10.10.2.0/24
        region: "us-east-2"
        state: present
      register: private_subnet2
    - name: create internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 ig
        state: present
      register: igw
    - name: Create nat gateway
      ec2_vpc_nat_gateway:
        subnet_id: "{{ public_subnet.subnet.id }}"
        wait: yes
        if_exist_do_not_create: true
        state: present
      register: nat
    - name: Create public route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 public rt
        subnets: 
          - "{{ public_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present
      register: public_rt
    - name: Create private route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 private rt
        subnets:
          - "{{ private_subnet1.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat.nat_gateway_id }}"
        state: present
      register: private_rt
    - name: Create public Network ACL
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: m5-public-acl
        region: us-east-1
        subnets: "{{ public_subnet.subnet.id }}"
        tags:
          Name: m5-public-acl
        ingress:
            # rule no, protocol, allow/deny, cidr, icmp_type, icmp_code,
            #                                             port from, port to
            - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
            - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 5000, 5000]
            - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
            - [400, 'tcp', 'allow', '0.0.0.0/0', null, null, 25, 25]
            - [500, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
            - [600, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
        egress:
            - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
            - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
            - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
            - [400, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
            - [500, 'tcp', 'allow', '0.0.0.0/0', null, null, 5432, 5432]
        state: 'present'
    - name: Create private Network ACL
      ec2_vpc_nacl:
        name: m5-private-acl
        region: us-east-1
        vpc_id: "{{ vpc.vpc.id }}"
        subnets: "{{ private_subnet1.subnet.id }}"
        tags:
          Name: m5-private-acl
        ingress:
            # rule no, protocol, allow/deny, cidr, icmp_type, icmp_code,
            #                                             port from, port to
            - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
            - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
            - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
            - [400, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
            - [500, 'tcp', 'allow', '0.0.0.0/0', null, null, 5432, 5432]
        egress:
            - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
            - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
            - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
        state: 'present'
    - name: Create security Groups
      ec2_group:
        name: Module5-developer-sg
        description: developer security group
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
              - 5000
              - 443
            cidr_ip: 0.0.0.0/0
            rule_desc: allowed rules
        state: present
      register: developer sg
    - name: Create rds security group
      ec2_group:
        name: Module5-rds-sg
        description: rds security group
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: all
            cidr_ip: 0.0.0.0/0
        state: present
